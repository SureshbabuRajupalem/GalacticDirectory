// <auto-generated />
using System;
using GalacticDirectory.DAL.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace GalacticDirectory.DAL.Migrations
{
    [DbContext(typeof(StarWarDBContext))]
    partial class StarWarDBContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.6-servicing-10079")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("GalacticDirectory.DAL.Models.Film", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("Created");

                    b.Property<string>("Director");

                    b.Property<DateTime>("Edited");

                    b.Property<int>("Episode_id");

                    b.Property<string>("Opening_crawl");

                    b.Property<string>("Producer");

                    b.Property<string>("Release_Date");

                    b.Property<int?>("SpeciesID");

                    b.Property<string>("Title");

                    b.Property<string>("Url");

                    b.HasKey("Id");

                    b.HasIndex("SpeciesID");

                    b.ToTable("Films");
                });

            modelBuilder.Entity("GalacticDirectory.DAL.Models.People", b =>
                {
                    b.Property<int>("People_ID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Birth_year");

                    b.Property<DateTime>("Created");

                    b.Property<DateTime>("Edited");

                    b.Property<string>("Eye_color");

                    b.Property<string>("Gender");

                    b.Property<string>("Hair_color");

                    b.Property<string>("Height");

                    b.Property<string>("Homeworld");

                    b.Property<string>("Mass");

                    b.Property<string>("Name");

                    b.Property<string>("Skin_color");

                    b.Property<int?>("SpeciesID");

                    b.Property<string>("Url");

                    b.HasKey("People_ID");

                    b.HasIndex("SpeciesID");

                    b.ToTable("People");
                });

            modelBuilder.Entity("GalacticDirectory.DAL.Models.Species", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name");

                    b.Property<int>("PeopleID");

                    b.HasKey("ID");

                    b.ToTable("Species");
                });

            modelBuilder.Entity("GalacticDirectory.DAL.Models.Vehicle", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name");

                    b.Property<int>("PeopleID");

                    b.HasKey("ID");

                    b.ToTable("Vehicles");
                });

            modelBuilder.Entity("GalacticDirectory.DAL.Models.Film", b =>
                {
                    b.HasOne("GalacticDirectory.DAL.Models.Species")
                        .WithMany("Films")
                        .HasForeignKey("SpeciesID");
                });

            modelBuilder.Entity("GalacticDirectory.DAL.Models.People", b =>
                {
                    b.HasOne("GalacticDirectory.DAL.Models.Species")
                        .WithMany("people")
                        .HasForeignKey("SpeciesID");
                });
#pragma warning restore 612, 618
        }
    }
}
